import streamlit as st
import os
import zipfile
from datetime import datetime
from pathlib import Path

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(
    page_title="–§–∞–π–ª–æ–≤—ã–π —Ö–æ—Å—Ç–∏–Ω–≥",
    page_icon="üìÅ",
    layout="wide"
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
UPLOAD_FOLDER = "public_files"
OUTPUT_FOLDER = "output"  # –ü–∞–ø–∫–∞, –∫–æ—Ç–æ—Ä—É—é –Ω—É–∂–Ω–æ —Å–∫–∞—á–∏–≤–∞—Ç—å
PUBLIC_URL = "http://87.228.39.18:8501"  # URL –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–µ—Ä–∞

# –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
os.makedirs(UPLOAD_FOLDER, exist_ok=True)
os.makedirs(OUTPUT_FOLDER, exist_ok=True)

def save_uploaded_file(uploadedfile):
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π —Ñ–∞–π–ª –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Å—ã–ª–∫—É"""
    timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
    filename = f"{timestamp}_{uploadedfile.name}"
    filepath = os.path.join(UPLOAD_FOLDER, filename)
    
    with open(filepath, "wb") as f:
        f.write(uploadedfile.getbuffer())
    
    return f"{PUBLIC_URL}/{UPLOAD_FOLDER}/{filename}"

def create_zip_download(folder_path):
    """–°–æ–∑–¥–∞–µ—Ç zip-–∞—Ä—Ö–∏–≤ –ø–∞–ø–∫–∏ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è"""
    zip_path = f"{folder_path}.zip"
    with zipfile.ZipFile(zip_path, 'w', zipfile.ZIP_DEFLATED) as zipf:
        for root, _, files in os.walk(folder_path):
            for file in files:
                file_path = os.path.join(root, file)
                arcname = os.path.relpath(file_path, folder_path)
                zipf.write(file_path, arcname)
    return zip_path

# –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å
st.title("üìÅ –§–∞–π–ª–æ–≤—ã–π —Ö–æ—Å—Ç–∏–Ω–≥ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ output")

tab1, tab2 = st.tabs(["–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤", "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ output"])

with tab1:
    with st.expander("‚ÑπÔ∏è –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –∑–∞–≥—Ä—É–∑–∫–µ"):
        st.write("""
        1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é —Ñ–æ—Ä–º—ã –Ω–∏–∂–µ
        2. –ü–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –ø—É–±–ª–∏—á–Ω—É—é —Å—Å—ã–ª–∫—É
        3. –≠—Ç–æ–π —Å—Å—ã–ª–∫–æ–π –º–æ–∂–Ω–æ –¥–µ–ª–∏—Ç—å—Å—è —Å –¥—Ä—É–≥–∏–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏
        """)

    uploaded_file = st.file_uploader("–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏", type=None)

    if uploaded_file is not None:
        try:
            file_url = save_uploaded_file(uploaded_file)
            st.success("–§–∞–π–ª —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω!")
            st.markdown(f"**–ü—É–±–ª–∏—á–Ω–∞—è —Å—Å—ã–ª–∫–∞:** [{file_url}]({file_url})")
            st.code(file_url, language="text")
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞: {e}")

    if os.path.exists(UPLOAD_FOLDER) and os.listdir(UPLOAD_FOLDER):
        with st.expander("üìÇ –†–∞–Ω–µ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"):
            files = os.listdir(UPLOAD_FOLDER)
            for file in files:
                st.markdown(f"- [{file}]({PUBLIC_URL}/{UPLOAD_FOLDER}/{file})")

with tab2:
    st.header("–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–∞–ø–∫–æ–π output")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ –ø–∞–ø–∫–∏ output
    if not os.path.exists(OUTPUT_FOLDER):
        st.warning(f"–ü–∞–ø–∫–∞ {OUTPUT_FOLDER} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
    else:
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏
        with st.expander(f"üìÇ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–∞–ø–∫–∏ {OUTPUT_FOLDER}"):
            output_files = []
            for root, _, files in os.walk(OUTPUT_FOLDER):
                for file in files:
                    output_files.append(os.path.join(root, file))
            
            if not output_files:
                st.info("–ü–∞–ø–∫–∞ output –ø—É—Å—Ç–∞")
            else:
                for file in output_files:
                    st.write(f"- {file}")
        
        # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –≤—Å–µ–π –ø–∞–ø–∫–∏ output
        if st.button("–°–∫–∞—á–∞—Ç—å –ø–∞–ø–∫—É output –∫–∞–∫ ZIP"):
            try:
                zip_path = create_zip_download(OUTPUT_FOLDER)
                with open(zip_path, "rb") as f:
                    st.download_button(
                        label="‚¨áÔ∏è –ù–∞–∂–º–∏—Ç–µ –¥–ª—è —Å–∫–∞—á–∏–≤–∞–Ω–∏—è",
                        data=f,
                        file_name="output.zip",
                        mime="application/zip"
                    )
                os.remove(zip_path)  # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π zip-—Ñ–∞–π–ª
            except Exception as e:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∞—Ä—Ö–∏–≤–∞: {e}")

# –ó–∞–ø—É—Å–∫: streamlit run app.py
